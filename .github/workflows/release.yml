name: Release POS Printer

on:
  push:
    tags:
      - 'v*.*.*'  # v1.0.0 같이 버전 태그를 push할 때만 작동

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔖 Extract version from tag
      id: extract_version
      run: |
        $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: 📝 Create version.json
      run: |
        $info = @{
          version = "${{ env.VERSION }}"
          updated_at = Get-Date -Format "yyyy-MM-dd"
          description = "Auto-generated release"
        }
        $info | ConvertTo-Json -Depth 10 | Set-Content version.json -Encoding UTF8
      shell: pwsh

    - name: 🏗️ Build and package
      run: |
        .\deployment_guide.ps1 -Version "${{ env.VERSION }}" -OutputPath ".\release"
      shell: pwsh

    - name: 📦 Zip release files
      run: |
        Compress-Archive -Path ".\release\*" -DestinationPath "POS_Printer_v${{ env.VERSION }}.zip" -Force
      shell: pwsh

    - name: 🚀 Create GitHub Release and Upload Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ env.VERSION }}" `
          --title "POS Printer v${{ env.VERSION }}" `
          --notes "This is Auto-generated release" `
          "POS_Printer_v${{ env.VERSION }}.zip#Release file" `
          "INSTALLATION_GUIDE.md#Installation Guide"
      shell: pwsh
